graph TD
    subgraph User
        U[User / Agent]
    end

    subgraph Salesforce
        SF[Salesforce Platform]
        SF_JWT[Signed JWT Generator]
    end

    subgraph iCB
        ICB_CM[iCB Case Manager]
        Egress[Egress Authn/Authz Facade]
    end

    subgraph Infra
        AWS[Secrets Manager]
    end

    subgraph Florence
        FL[Florence Case Manager]
        RBAC[RBAC Enforcer]
    end

    U --> SF: Login via SAML
    SF --> SF_JWT: Generate signed JWT with source_role
    SF_JWT --> ICB_CM: Send signed JWT
    ICB_CM --> ICB_CM: Extract `source_role` from JWT
    ICB_CM --> Egress: Request token with `role` claim
    Egress --> AWS: Retrieve signing key
    AWS --> Egress: Return signing key
    Egress --> ICB_CM: Return signed JWT (with role claim)
    ICB_CM --> FL: Send `role` claim only
    FL --> RBAC: Enforce role-based access

    style U fill:#fff9e6,stroke:#f4b400,stroke-width:2px
    style SF fill:#e3f2fd,stroke:#42a5f5,stroke-width:2px
    style ICB_CM fill:#f0f4c3,stroke:#c0ca33,stroke-width:2px
    style FL fill:#f3e5f5,stroke:#ab47bc,stroke-width:2px
    style Egress fill:#ede7f6,stroke:#7e57c2,stroke-width:2px
    style AWS fill:#e0f2f1,stroke:#26a69a,stroke-width:2px
    style RBAC fill:#fce4ec,stroke:#ec407a,stroke-width:2px

============


graph TD
    Agent[Browser Agent]
    SF[Salesforce Org]
    IDA[IDAnywhere (SAML IdP)]
    FR[ForgeRock\nToken Issuer]
    TMS[ICB TMS\nToken Exchange Engine]
    FL[Florence\nRBAC Enforcement]

    Agent --> SF
    SF --> IDA: SAML Auth
    SF --> FR: Request Colleague Token
    FR --> SF: Colleague Token
    SF --> TMS: JWT + Colleague Token
    TMS --> TMS: Validate JWT\nExtract `role`\nIssue Access Token
    SF --> FL: Call APIs with Access Token
    FL --> FL: Use role to enforce RBAC
